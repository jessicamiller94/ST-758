{
    "contents" : "### Jessica Miller ###\n### ST 790 DC #2 #####\n### Oct. 25, 2016 ####\n\n## Load in the data\nsetwd(\"F:/ST 790\")\ndata <- read.csv(\"DC2.csv\", header=T)\n\n# Load geoR package for later variogram computations\nlibrary(geoR)\n\n# Identify where nonstationarity lies\npar(mfrow=c(2,2), oma=c(0,0,0,0), mar=c(2.5,2.5,2.5,2.5))\nplot(data$S1[1:75], data$Y1[1:75], ylab=\"Y1\", xlab=\"Locations 1-75\", main=\"Y1\")\nplot(data$S1[1:75], data$Y2[1:75], ylab=\"Y2\", xlab=\"Locations 1-75\", main=\"Y2\")\nplot(data$S1[1:75], data$Y3[1:75], ylab=\"Y3\", xlab=\"Locations 1-75\", main=\"Y3\")\nplot(data$S1[1:75], data$Y4[1:75], ylab=\"Y4\", xlab=\"Locations 1-75\", main=\"Y4\")\n\n# Write a function that calculates the variogram\n# for the stationary part of each Y \nsmallervg <- function(vals, seq) {\n  good <- !is.na(vals)\n  bad <- is.na(vals)\n  newvals <- vals[good]\n  newcoords <- cbind(data$S1[seq][good], data$S2[seq][good])\n  \n  # Compute the variogram and covariance vector for each\n  vg <- variog(coords = newcoords , data = newvals)\n  vfit <- variofit(vg, c(5,10), cov.model = \"exponential\")\n  covvec = vfit$nugget*(vg$u == 0) + vfit$cov.pars[1]*exp(-vg$u/vfit$cov.pars[2])\n  return(vfit$cov.pars)\n}\n\n# Divide the CSV file into the 75 parts per column\nblocks <- seq(1,5625, by=75)\n\n# Run the variogram function and set the parameter estimates into the smallerpars array\nsmallerpars <- array(dim=c(25,2,75))\nfor (i in 1:25) {\n  for (j in 1:75) {\n    smallerpars[i, ,j] <- smallervg(vals=data[blocks[j]:(blocks[j]+74),(i+3)], seq=blocks[j]:(blocks[j]+74))\n  }\n}\n\n# Use the krige.conv function for prediction\npred <- function(vals, pars, seq){\n  good <- !is.na(vals)\n  bad <- is.na(vals)\n  newvals <- vals[good]\n  predvals <- vals[bad]\n  newcoords <- cbind(data$S1[seq][good], data$S2[seq][good])\n  predcoords <- cbind(data$S1[seq][bad], data$S2[seq][bad])\n  krig <- krige.conv(coords=newcoords, data=newvals,\n                    locations=predcoords, krige=krige.control(cov.pars=pars))\n  return(krig)\n}\n\n# Run the pred function for each stationary block\nfor (i in 1:25) {\n  for (j in 1:75) {\n    maybe <- pred(vals=data[blocks[j]:(blocks[j]+74),(i+3)], pars=smallerpars[i, ,j], seq=blocks[j]:(blocks[j]+74))\n    # Replace the NA values with the predicted values   \n    m <- 1\n    for (k in 1:75) {\n      if (is.na(data[(blocks[j]:(blocks[j]+74)),(i+3)][k])) {\n        data[(blocks[j]:(blocks[j]+74)),(i+3)][k] <- maybe$predict[m]\n        m <- m + 1\n      }\n      \n    }\n  }\n  print(i)\n}\n\n# Write the resulting data out to the file\nwrite.csv(data, file = \"JessicaMiller.csv\")\n\n# Plot the imputed points on top of the old data.\nnewdata <- read.csv(\"JessicaMiller.csv\", header=T)\nplot(newdata$S1[1:75], newdata$Y1[1:75], ylab=\"Y1\", xlab=\"Locations 1-75\", main=\"Y1\", col=\"red\", pch=16)\npoints(data$S1[1:75], data$Y1[1:75], pch=16)\nplot(newdata$S1[1:75], newdata$Y2[1:75], ylab=\"Y2\", xlab=\"Locations 1-75\", main=\"Y2\", col=\"red\", pch=16)\npoints(data$S1[1:75], data$Y2[1:75], pch=16)\nplot(newdata$S1[1:75], newdata$Y3[1:75], ylab=\"Y3\", xlab=\"Locations 1-75\", main=\"Y3\", col=\"red\", pch=16)\npoints(data$S1[1:75], data$Y3[1:75], pch=16)\nplot(newdata$S1[1:75], newdata$Y4[1:75], ylab=\"Y4\", xlab=\"Locations 1-75\", main=\"Y4\", col=\"red\", pch=16)\npoints(data$S1[1:75], data$Y4[1:75], pch=16)\n\n",
    "created" : 1481063255661.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3651124936",
    "id" : "CC6F1931",
    "lastKnownWriteTime" : 1477494248,
    "path" : "F:/ST 790/dc2.R",
    "project_path" : null,
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}